name: ALT_LAS CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'api-gateway/package-lock.json'
      
      - name: Install API Gateway dependencies
        run: cd api-gateway && npm ci
      
      - name: Lint API Gateway
        run: cd api-gateway && npm run lint
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'segmentation-service/requirements.txt'
      
      - name: Install Segmentation Service dependencies
        run: cd segmentation-service && pip install -r requirements.txt
      
      - name: Lint Segmentation Service
        run: cd segmentation-service && python -m flake8
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      
      - name: Lint Runner Service
        run: cd runner-service && cargo clippy -- -D warnings
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      
      - name: Lint Archive Service
        run: cd archive-service && go vet ./...

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'api-gateway/package-lock.json'
      
      - name: Test API Gateway
        run: cd api-gateway && npm ci && npm test
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'segmentation-service/requirements.txt'
      
      - name: Test Segmentation Service
        run: cd segmentation-service && pip install -r requirements.txt && pytest
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Test Runner Service
        run: cd runner-service && cargo test
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      
      - name: Test Archive Service
        run: cd archive-service && go test ./...

  security-scan:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build API Gateway
        uses: docker/build-push-action@v4
        with:
          context: ./api-gateway
          push: false
          load: true
          tags: alt_las/api-gateway:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build Segmentation Service
        uses: docker/build-push-action@v4
        with:
          context: ./segmentation-service
          push: false
          load: true
          tags: alt_las/segmentation-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build Runner Service
        uses: docker/build-push-action@v4
        with:
          context: ./runner-service
          push: false
          load: true
          tags: alt_las/runner-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build Archive Service
        uses: docker/build-push-action@v4
        with:
          context: ./archive-service
          push: false
          load: true
          tags: alt_las/archive-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
