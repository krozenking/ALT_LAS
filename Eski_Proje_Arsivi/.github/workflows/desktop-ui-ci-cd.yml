name: Desktop UI CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'desktop-ui/**'
      - '.github/workflows/desktop-ui-ci-cd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'desktop-ui/**'
      - '.github/workflows/desktop-ui-ci-cd.yml'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type'
        required: true
        default: 'beta'
        type: choice
        options:
          - beta
          - release

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./desktop-ui
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './desktop-ui/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
      
      - name: Run tests
        run: npm test
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./desktop-ui/test-results
          retention-days: 7

  build-windows:
    name: Build Windows
    needs: lint-and-test
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./desktop-ui
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './desktop-ui/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Windows package
        run: npm run make -- --platform=win32
        env:
          NODE_ENV: production
          API_GATEWAY_URL: ${{ secrets.API_GATEWAY_URL }}
      
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            ./desktop-ui/out/make/squirrel.windows/x64/*.exe
            ./desktop-ui/out/make/squirrel.windows/x64/*.msi
            ./desktop-ui/out/make/squirrel.windows/x64/*.nupkg
          retention-days: 7

  build-macos:
    name: Build macOS
    needs: lint-and-test
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./desktop-ui
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './desktop-ui/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build macOS package
        run: npm run make -- --platform=darwin
        env:
          NODE_ENV: production
          API_GATEWAY_URL: ${{ secrets.API_GATEWAY_URL }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            ./desktop-ui/out/make/*.dmg
            ./desktop-ui/out/make/zip/darwin/x64/*.zip
          retention-days: 7

  build-linux:
    name: Build Linux
    needs: lint-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./desktop-ui
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './desktop-ui/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Linux package
        run: npm run make -- --platform=linux
        env:
          NODE_ENV: production
          API_GATEWAY_URL: ${{ secrets.API_GATEWAY_URL }}
      
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            ./desktop-ui/out/make/deb/x64/*.deb
            ./desktop-ui/out/make/rpm/x64/*.rpm
          retention-days: 7

  release:
    name: Create Release
    needs: [build-windows, build-macos, build-linux]
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Get version from package.json
        id: package-version
        run: |
          VERSION=$(node -p "require('./desktop-ui/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Determine release type
        id: release-type
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "type=${{ github.event.inputs.release_type }}" >> $GITHUB_OUTPUT
          else
            echo "type=beta" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.version }}-${{ steps.release-type.outputs.type }}
          name: ALT_LAS Desktop UI v${{ steps.package-version.outputs.version }} ${{ steps.release-type.outputs.type == 'beta' && 'Beta' || 'Release' }}
          draft: true
          prerelease: ${{ steps.release-type.outputs.type == 'beta' }}
          files: |
            artifacts/windows-artifacts/*.exe
            artifacts/windows-artifacts/*.msi
            artifacts/windows-artifacts/*.nupkg
            artifacts/macos-artifacts/*.dmg
            artifacts/macos-artifacts/*.zip
            artifacts/linux-artifacts/*.deb
            artifacts/linux-artifacts/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
