# GPU Test Ortamı için Dockerfile
# Bu Dockerfile, farklı GPU mimarileri için test ortamı oluşturmak için kullanılır.
# Kullanım: docker build -t gpu-test-env:cuda-11.4 --build-arg CUDA_VERSION=11.4 .

ARG CUDA_VERSION=11.4
FROM nvidia/cuda:${CUDA_VERSION}-cudnn8-devel-ubuntu20.04

# Etkileşimli olmayan kurulum için ortam değişkenleri
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Temel paketleri yükle
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    curl \
    wget \
    ca-certificates \
    libssl-dev \
    libffi-dev \
    libjpeg-dev \
    libpng-dev \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    unzip \
    pkg-config \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# Python sembolik bağlantısı oluştur
RUN ln -s /usr/bin/python3 /usr/bin/python

# Pip güncellemesi
RUN pip3 install --no-cache-dir --upgrade pip

# TensorRT kurulumu (CUDA sürümüne göre)
ARG TENSORRT_VERSION=8.0.1
ARG TENSORRT_CUDA_VERSION=11.3
RUN if [ $(echo "${CUDA_VERSION} >= 11.3" | bc -l) -eq 1 ]; then \
    apt-get update && apt-get install -y --no-install-recommends \
    libnvinfer8=${TENSORRT_VERSION}-1+cuda${TENSORRT_CUDA_VERSION} \
    libnvinfer-dev=${TENSORRT_VERSION}-1+cuda${TENSORRT_CUDA_VERSION} \
    libnvinfer-plugin8=${TENSORRT_VERSION}-1+cuda${TENSORRT_CUDA_VERSION} \
    libnvinfer-plugin-dev=${TENSORRT_VERSION}-1+cuda${TENSORRT_CUDA_VERSION} \
    && rm -rf /var/lib/apt/lists/*; \
    fi

# Python paketlerini yükle
COPY requirements.txt /tmp/
RUN pip3 install --no-cache-dir -r /tmp/requirements.txt

# NVIDIA DCGM kurulumu
RUN curl -s -L https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/datacenter-gpu-manager_2.4.5_amd64.deb -o /tmp/datacenter-gpu-manager.deb \
    && dpkg -i /tmp/datacenter-gpu-manager.deb \
    && rm /tmp/datacenter-gpu-manager.deb

# NVIDIA Nsight Systems kurulumu
RUN curl -s -L https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/nsight-systems_2022.1.3.3-1_amd64.deb -o /tmp/nsight-systems.deb \
    && dpkg -i /tmp/nsight-systems.deb \
    && rm /tmp/nsight-systems.deb

# ALT_LAS kaynak kodunu kopyala
WORKDIR /app
COPY . /app/

# Test betiklerini kopyala
COPY test_scripts/ /app/test_scripts/

# Çalışma dizinini ayarla
WORKDIR /app/test_scripts

# Çalıştırma izinlerini ayarla
RUN chmod +x /app/test_scripts/*.sh

# Konteyner başlatıldığında çalışacak komut
ENTRYPOINT ["/app/test_scripts/run_tests.sh"]
