# Stage 1: Build stage
FROM python:3.10.13-slim-bookworm as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    libopenblas-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# Stage 2: Final stage
FROM python:3.10.13-slim-bookworm

# Create a non-root user and group
RUN groupadd --system app && useradd --system --gid app --shell /sbin/nologin app

WORKDIR /app

# Copy Python dependencies from builder stage
COPY --from=builder /wheels /wheels
COPY requirements.txt .
RUN pip install --no-cache-dir --no-index --find-links=/wheels -r requirements.txt \
    && rm -rf /wheels requirements.txt

# Copy application code
COPY ./src ./src
COPY ./src/main.py .

# Create directories and set permissions
RUN mkdir -p /app/models /app/cache /app/logs \
    && chown -R app:app /app

# Install development tools for debugging
RUN apt-get update && apt-get install -y --no-install-recommends \
    vim \
    procps \
    net-tools \
    htop \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# In development, we keep root for debugging purposes
# USER app  # Commented out for development environment

# Set environment variables
ENV MODEL_DIR=/app/models
ENV CACHE_DIR=/app/cache
ENV LOG_LEVEL=DEBUG  # More verbose logging for development
ENV PORT=8000
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1  # Don't write .pyc files
ENV FLASK_ENV=development
ENV FLASK_DEBUG=1

# Expose port
EXPOSE 8000

# Run the application with hot-reload for development
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
