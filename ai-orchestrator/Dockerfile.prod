# Stage 1: Build stage
FROM python:3.10.13-slim-bookworm as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    wget \
    curl \
    libopenblas-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
# Consider pinning dependencies for production
RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# Stage 2: Final stage
FROM python:3.10.13-slim-bookworm

# Create a non-root user and group
RUN groupadd --system app && useradd --system --gid app --shell /sbin/nologin app

WORKDIR /app

# Install runtime dependencies (if any, beyond base python)
# Minimal required packages should be installed here.
# For now, assume base python is sufficient.

# Copy Python dependencies from builder stage
COPY --from=builder /wheels /wheels
COPY requirements.txt .
RUN pip install --no-cache-dir --no-index --find-links=/wheels -r requirements.txt \
    && rm -rf /wheels requirements.txt

# Copy application code
# Copy only necessary source files, not the entire directory if possible
COPY ./src ./src
COPY ./src/main.py .

# Create directories and set permissions
RUN mkdir -p /app/models /app/cache /app/logs \
    && chown -R app:app /app
USER app

# Set environment variables
ENV MODEL_DIR=/app/models
ENV CACHE_DIR=/app/cache
ENV LOG_LEVEL=INFO
ENV PORT=8000
ENV PYTHONUNBUFFERED=1 # Recommended for logging

# Expose port
EXPOSE 8000

# Healthcheck (Example - adjust command as needed)
# HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=3 \
#   CMD curl --fail http://localhost:8000/health || exit 1

# Run the application
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000"]

