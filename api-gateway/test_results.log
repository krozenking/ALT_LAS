
> api-gateway@1.0.0 test
> jest

PASS tests/services/userService.test.ts
  ‚óè Console

    console.log
      User created: testuser (ID: 1)

      at Object.createUser (src/services/userService.ts:63:13)

    console.log
      User created: existinguser (ID: 2)

      at Object.createUser (src/services/userService.ts:63:13)

    console.log
      User created: user1 (ID: 3)

      at Object.createUser (src/services/userService.ts:63:13)

    console.log
      Running simplified getAllUsers test...

      at Object.<anonymous> (tests/services/userService.test.ts:51:13)

    console.log
      getAllUsers called in simplified service

      at Object.getAllUsers (src/services/userService.ts:69:13)

    console.log
      Simplified getAllUsers test finished.

      at Object.<anonymous> (tests/services/userService.test.ts:55:13)

FAIL tests/basic.test.ts (5.985 s)
  ‚óè Console

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Yetkilendirme servisi ba≈ülatƒ±ldƒ± {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Yeni route izni eklendi: get /profile {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Yeni route izni eklendi: put /profile {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Service registered: SegmentationService at http://segmentation-service:3001 {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Service registered: RunnerService at http://runner-service:3002 {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Service registered: ArchiveService at http://archive-service:3003 {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: Health check endpoint configured at /health. {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: Prometheus metrics collection enabled and /metrics endpoint configured. {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: API Gateway 3000 portunda √ßalƒ±≈üƒ±yor {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: API Dok√ºmantasyonu: http://localhost:3000/api-docs {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [31merror[39m: Redis connection error: connect ECONNREFUSED 127.0.0.1:6379 {
        "service": "api-gateway",
        "errno": -111,
        "code": "ECONNREFUSED",
        "syscall": "connect",
        "address": "127.0.0.1",
        "port": 6379,
        "stack": "Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "GET /api/health HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [33mwarn[39m: Redis connection closed. {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: Reconnecting to Redis... {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/register HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/login HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/login HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [31merror[39m: Redis connection error: connect ECONNREFUSED 127.0.0.1:6379 {
        "service": "api-gateway",
        "errno": -111,
        "code": "ECONNREFUSED",
        "syscall": "connect",
        "address": "127.0.0.1",
        "port": 6379,
        "stack": "Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

  ‚óè Basic API Gateway Functionality Tests ‚Ä∫ GET /api/health - should return API Gateway health status

    expect(received).toEqual(expected) // deep equality

    Expected: 200
    Received: 404

      22 |     it('GET /api/health - should return API Gateway health status', async () => {
      23 |         const res = await request(app).get('/api/health');
    > 24 |         expect(res.statusCode).toEqual(200);
         |                                ^
      25 |         expect(res.body.status).toEqual('ok');
      26 |     });
      27 |

      at Object.<anonymous> (tests/basic.test.ts:24:32)

  ‚óè Basic API Gateway Functionality Tests ‚Ä∫ POST /api/auth/register - should register a new user

    expect(received).toEqual(expected) // deep equality

    Expected: 201
    Received: 404

      31 |             .post('/api/auth/register')
      32 |             .send(testUser);
    > 33 |         expect(res.statusCode).toEqual(201);
         |                                ^
      34 |         expect(res.body.success).toBe(true);
      35 |         expect(res.body.data).toHaveProperty('id');
      36 |         testUserId = res.body.data.id; // Save user ID

      at Object.<anonymous> (tests/basic.test.ts:33:32)

  ‚óè Basic API Gateway Functionality Tests ‚Ä∫ POST /api/auth/login - should log in the registered user

    expect(received).toEqual(expected) // deep equality

    Expected: 200
    Received: 404

      42 |             .post('/api/auth/login')
      43 |             .send({ username: testUser.username, password: testUser.password });
    > 44 |         expect(res.statusCode).toEqual(200);
         |                                ^
      45 |         expect(res.body.success).toBe(true);
      46 |         expect(res.body.data).toHaveProperty('token');
      47 |         userAuthToken = res.body.data.token; // Save user token

      at Object.<anonymous> (tests/basic.test.ts:44:32)

  ‚óè Basic API Gateway Functionality Tests ‚Ä∫ GET /api/auth/profile - should allow authenticated user to access profile

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not ""

      50 |     // 4. Authenticated Route Access (User)
      51 |     it('GET /api/auth/profile - should allow authenticated user to access profile', async () => {
    > 52 |         expect(userAuthToken).not.toBe(''); // Ensure token exists
         |                                   ^
      53 |         const res = await request(app)
      54 |             .get('/api/auth/profile')
      55 |             .set('Authorization', `Bearer ${userAuthToken}`);

      at Object.<anonymous> (tests/basic.test.ts:52:35)

  ‚óè Basic API Gateway Functionality Tests ‚Ä∫ POST /api/auth/login - should log in the admin user

    expect(received).toEqual(expected) // deep equality

    Expected: 200
    Received: 404

      64 |             .post('/api/auth/login')
      65 |             .send({ username: adminUser.username, password: adminUser.password });
    > 66 |         expect(res.statusCode).toEqual(200);
         |                                ^
      67 |         expect(res.body.success).toBe(true);
      68 |         expect(res.body.data).toHaveProperty('token');
      69 |         adminAuthToken = res.body.data.token; // Save admin token

      at Object.<anonymous> (tests/basic.test.ts:66:32)

  ‚óè Basic API Gateway Functionality Tests ‚Ä∫ GET /api/auth/users - should allow admin access

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not ""

      72 |     // 6. Authorization Check (Admin Route)
      73 |     it('GET /api/auth/users - should allow admin access', async () => {
    > 74 |         expect(adminAuthToken).not.toBe(''); // Ensure token exists
         |                                    ^
      75 |         const res = await request(app)
      76 |             .get('/api/auth/users')
      77 |             .set('Authorization', `Bearer ${adminAuthToken}`);

      at Object.<anonymous> (tests/basic.test.ts:74:36)

  ‚óè Basic API Gateway Functionality Tests ‚Ä∫ GET /api/auth/users - should deny non-admin access

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not ""

      83 |     // 7. Authorization Check (User trying Admin Route)
      84 |     it('GET /api/auth/users - should deny non-admin access', async () => {
    > 85 |         expect(userAuthToken).not.toBe(''); // Ensure token exists
         |                                   ^
      86 |         const res = await request(app)
      87 |             .get('/api/auth/users')
      88 |             .set('Authorization', `Bearer ${userAuthToken}`);

      at Object.<anonymous> (tests/basic.test.ts:85:35)

FAIL tests/auth.test.ts (6.17 s)
  ‚óè Console

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Yetkilendirme servisi ba≈ülatƒ±ldƒ± {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Yeni route izni eklendi: get /profile {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Yeni route izni eklendi: put /profile {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Service registered: SegmentationService at http://segmentation-service:3001 {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Service registered: RunnerService at http://runner-service:3002 {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:21 [32minfo[39m: Service registered: ArchiveService at http://archive-service:3003 {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: Health check endpoint configured at /health. {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: Prometheus metrics collection enabled and /metrics endpoint configured. {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: API Gateway 3000 portunda √ßalƒ±≈üƒ±yor {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: API Dok√ºmantasyonu: http://localhost:3000/api-docs {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [31merror[39m: Redis connection error: connect ECONNREFUSED 127.0.0.1:6379 {
        "service": "api-gateway",
        "errno": -111,
        "code": "ECONNREFUSED",
        "syscall": "connect",
        "address": "127.0.0.1",
        "port": 6379,
        "stack": "Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/login HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [33mwarn[39m: Redis connection closed. {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: Reconnecting to Redis... {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.error
      Failed to log in as admin for tests: { message: 'Endpoint bulunamadƒ±' }

      44 |             adminSessionId = adminLoginRes.body.data.sessionId;
      45 |         } else {
    > 46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
         |                     ^
      47 |             throw new Error('Admin login failed');
      48 |         }
      49 |     } catch (error) {

      at Object.<anonymous> (tests/auth.test.ts:46:21)

    console.error
      Error logging in as admin: Error: Admin login failed
          at Object.<anonymous> (/home/ubuntu/ALT_LAS/api-gateway/tests/auth.test.ts:47:19)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)

      48 |         }
      49 |     } catch (error) {
    > 50 |          console.error('Error logging in as admin:', error);
         |                  ^
      51 |          throw error; // Fail the test suite if admin login fails
      52 |     }
      53 | });

      at Object.<anonymous> (tests/auth.test.ts:50:18)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/login HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [31merror[39m: Redis connection error: connect ECONNREFUSED 127.0.0.1:6379 {
        "service": "api-gateway",
        "errno": -111,
        "code": "ECONNREFUSED",
        "syscall": "connect",
        "address": "127.0.0.1",
        "port": 6379,
        "stack": "Error: connect ECONNREFUSED 127.0.0.1:6379\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16)"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [33mwarn[39m: Redis connection closed. {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: Reconnecting to Redis... {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/login HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/login HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

    console.log
      2025-05-02 14:13:22 [32minfo[39m: ::ffff:127.0.0.1 - - [02/May/2025:18:13:22 +0000] "POST /api/auth/login HTTP/1.1" 404 34 "-" "-" {
        "service": "api-gateway"
      }

      at Console.log (node_modules/winston/lib/winston/transports/console.js:87:23)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /register - should register a new user successfully

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /register - should fail to register with an existing username

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /register - should fail to register with an existing email

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /register - should fail with invalid email format

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /register - should fail with short password

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /register - should fail with missing required fields

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /login - should log in the registered user

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /login - should fail with incorrect password

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /login - should trigger rate limiting after multiple failed attempts

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ GET /profile - should get current user details with valid token

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ GET /profile - should fail without token

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ PUT /profile - should update user profile

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /refresh-token - should refresh the token

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /refresh-token - should fail with invalid refresh token

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Authentication API (/api/auth) ‚Ä∫ POST /logout - should logout the user

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /change-password - should change the password successfully

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /change-password - should change the password successfully

    Login failed in beforeAll for Password Management tests

      320 |                 sessionId = loginRes.body.data.sessionId;
      321 |             } else {
    > 322 |                 throw new Error('Login failed in beforeAll for Password Management tests');
          |                       ^
      323 |             }
      324 |         }
      325 |     });

      at Object.<anonymous> (tests/auth.test.ts:322:23)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /change-password - should fail with incorrect current password

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /change-password - should fail with incorrect current password

    Login failed in beforeAll for Password Management tests

      320 |                 sessionId = loginRes.body.data.sessionId;
      321 |             } else {
    > 322 |                 throw new Error('Login failed in beforeAll for Password Management tests');
          |                       ^
      323 |             }
      324 |         }
      325 |     });

      at Object.<anonymous> (tests/auth.test.ts:322:23)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /forgot-password - should return success message even if email doesnt exist

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /forgot-password - should return success message even if email doesnt exist

    Login failed in beforeAll for Password Management tests

      320 |                 sessionId = loginRes.body.data.sessionId;
      321 |             } else {
    > 322 |                 throw new Error('Login failed in beforeAll for Password Management tests');
          |                       ^
      323 |             }
      324 |         }
      325 |     });

      at Object.<anonymous> (tests/auth.test.ts:322:23)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /forgot-password - should initiate reset for existing user and return token (for testing)

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /forgot-password - should initiate reset for existing user and return token (for testing)

    Login failed in beforeAll for Password Management tests

      320 |                 sessionId = loginRes.body.data.sessionId;
      321 |             } else {
    > 322 |                 throw new Error('Login failed in beforeAll for Password Management tests');
          |                       ^
      323 |             }
      324 |         }
      325 |     });

      at Object.<anonymous> (tests/auth.test.ts:322:23)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /reset-password - should reset password with valid token

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /reset-password - should reset password with valid token

    Login failed in beforeAll for Password Management tests

      320 |                 sessionId = loginRes.body.data.sessionId;
      321 |             } else {
    > 322 |                 throw new Error('Login failed in beforeAll for Password Management tests');
          |                       ^
      323 |             }
      324 |         }
      325 |     });

      at Object.<anonymous> (tests/auth.test.ts:322:23)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /reset-password - should fail with invalid token

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Password Management API (/api/password) ‚Ä∫ POST /reset-password - should fail with invalid token

    Login failed in beforeAll for Password Management tests

      320 |                 sessionId = loginRes.body.data.sessionId;
      321 |             } else {
    > 322 |                 throw new Error('Login failed in beforeAll for Password Management tests');
          |                       ^
      323 |             }
      324 |         }
      325 |     });

      at Object.<anonymous> (tests/auth.test.ts:322:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /my-roles - should get current user roles

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /my-roles - should get current user roles

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /my-permissions - should get current user permissions

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /my-permissions - should get current user permissions

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ POST /check-permission - should check if user has a specific permission (negative case)

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ POST /check-permission - should check if user has a specific permission (negative case)

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ POST /check-permission - should check if admin has admin permission (positive case)

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ POST /check-permission - should check if admin has admin permission (positive case)

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /users/{userId}/roles - should allow admin to get user roles

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /users/{userId}/roles - should allow admin to get user roles

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /users/{userId}/roles - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ GET /users/{userId}/roles - should deny non-admin access

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ PUT /users/{userId}/roles - should allow admin to update user roles

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ PUT /users/{userId}/roles - should allow admin to update user roles

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ PUT /users/{userId}/roles - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè User Roles & Permissions API (/api/user-roles) ‚Ä∫ PUT /users/{userId}/roles - should deny non-admin access

    Login failed in beforeAll for User Roles tests

      446 |                 authToken = loginRes.body.data.token;
      447 |             } else {
    > 448 |                 throw new Error('Login failed in beforeAll for User Roles tests');
          |                       ^
      449 |             }
      450 |         }
      451 |         // Ensure admin is logged in

      at Object.<anonymous> (tests/auth.test.ts:448:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users - should allow admin to list users

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users - should allow admin to list users

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users - should deny non-admin access

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users/{userId} - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users/{userId} - should deny non-admin access

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ PUT /users/{userId} - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ PUT /users/{userId} - should deny non-admin access

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ DELETE /users/{userId} - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ DELETE /users/{userId} - should deny non-admin access

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users/{userId} - should allow admin to get specific user details

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ GET /users/{userId} - should allow admin to get specific user details

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ PUT /users/{userId} - should allow admin to update user details

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ PUT /users/{userId} - should allow admin to update user details

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ DELETE /users/{userId} - should allow admin to delete a user

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ DELETE /users/{userId} - should allow admin to delete a user

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ DELETE /users/{userId} - should prevent deleting the admin user

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin User Management API (/api/auth/users) ‚Ä∫ DELETE /users/{userId} - should prevent deleting the admin user

    Admin login failed in beforeAll for Admin User Management tests

      580 |                 adminAuthToken = adminLoginRes.body.data.token;
      581 |             } else {
    > 582 |                 throw new Error('Admin login failed in beforeAll for Admin User Management tests');
          |                       ^
      583 |             }
      584 |         }
      585 |         // Create a temporary user for manipulation

      at Object.<anonymous> (tests/auth.test.ts:582:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /permissions - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /permissions - should deny non-admin access

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /permissions - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /permissions - should deny non-admin access

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /permissions/{permissionName} - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /permissions/{permissionName} - should deny non-admin access

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /roles - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /roles - should deny non-admin access

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /roles - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /roles - should deny non-admin access

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ PUT /roles/{roleName} - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ PUT /roles/{roleName} - should deny non-admin access

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /roles/{roleName} - should deny non-admin access

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /roles/{roleName} - should deny non-admin access

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /permissions - should allow admin to create a permission

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /permissions - should allow admin to create a permission

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /permissions - should allow admin to list permissions

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /permissions - should allow admin to list permissions

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /permissions/{permissionName} - should allow admin to get specific permission

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /permissions/{permissionName} - should allow admin to get specific permission

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /roles - should allow admin to create a role with the new permission

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ POST /roles - should allow admin to create a role with the new permission

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /roles - should allow admin to list roles

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /roles - should allow admin to list roles

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /roles/{roleName} - should allow admin to get specific role

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ GET /roles/{roleName} - should allow admin to get specific role

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ PUT /roles/{roleName} - should allow admin to update a role

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ PUT /roles/{roleName} - should allow admin to update a role

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /roles/{roleName} - should allow admin to delete a role

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /roles/{roleName} - should allow admin to delete a role

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /permissions/{permissionName} - should allow admin to delete a permission

    Admin login failed

      45 |         } else {
      46 |             console.error('Failed to log in as admin for tests:', adminLoginRes.body);
    > 47 |             throw new Error('Admin login failed');
         |                   ^
      48 |         }
      49 |     } catch (error) {
      50 |          console.error('Error logging in as admin:', error);

      at Object.<anonymous> (tests/auth.test.ts:47:19)

  ‚óè Admin Roles & Permissions Management API (/api/auth/roles, /api/auth/permissions) ‚Ä∫ DELETE /permissions/{permissionName} - should allow admin to delete a permission

    Admin login failed in beforeAll for Roles/Permissions tests

      716 |                 adminAuthToken = adminLoginRes.body.data.token;
      717 |             } else {
    > 718 |                 throw new Error('Admin login failed in beforeAll for Roles/Permissions tests');
          |                       ^
      719 |             }
      720 |         }
      721 |     });

      at Object.<anonymous> (tests/auth.test.ts:718:23)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Test Suites: 2 failed, 1 passed, 3 total
Tests:       61 failed, 5 passed, 66 total
Snapshots:   0 total
Time:        7.614 s, estimated 18 s
Ran all test suites.
