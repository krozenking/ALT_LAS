# Test Dockerfile for OS Integration Service
# Created by Worker 8 (Security and DevOps Specialist)

# Build stage
FROM rust:1.65-slim AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy Cargo files
COPY os-integration-service/Cargo.toml os-integration-service/Cargo.lock ./

# Create dummy source file to cache dependencies
RUN mkdir src && \
    echo "fn main() {}" > src/main.rs

# Build dependencies
RUN cargo build --release

# Copy application code
COPY os-integration-service/src ./src

# Build the application
RUN cargo build --release

# Install test tools
RUN cargo install cargo-tarpaulin

# Runtime stage
FROM debian:bullseye-slim

# Set working directory
WORKDIR /app

# Install runtime dependencies (e.g., OpenSSL)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libssl1.1 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appgroup && \
    useradd -r -g appgroup -d /app -s /sbin/nologin -c "Docker image user" appuser

# Copy the compiled binary and tests from the builder stage
COPY --from=builder /app/target/release/os-integration-service .
COPY --from=builder /app/target/release/deps /app/deps

# Set proper permissions
RUN chown -R appuser:appgroup /app && \
    chmod 755 os-integration-service

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8083

# Environment variables for testing
ENV RUST_BACKTRACE=1
ENV ENVIRONMENT=test

# Command to run tests
CMD ["cargo", "test", "--release"]
