apiVersion: apps/v1
kind: Deployment
metadata:
  name: segmentation-service
  namespace: atlas-beta
  labels:
    app: segmentation-service
    environment: beta
spec:
  replicas: 2
  selector:
    matchLabels:
      app: segmentation-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: segmentation-service
        environment: beta
    spec:
      containers:
      - name: segmentation-service
        image: frozen68/segmentation-service:beta
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
        env:
        - name: PORT
          value: "8000"
        - name: LOG_LEVEL
          value: "INFO"
        - name: MEMORY_OPTIMIZATION_ENABLED
          value: "true"
        - name: MEMORY_CHECK_INTERVAL
          value: "300"  # 5 minutes in seconds
        - name: MAX_MEMORY_USAGE_PERCENT
          value: "85"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: segmentation-service
  namespace: atlas-beta
  labels:
    app: segmentation-service
    environment: beta
spec:
  selector:
    app: segmentation-service
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
