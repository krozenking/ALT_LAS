apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-service
  labels:
    app: runner-service
    app.kubernetes.io/component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: runner-service
  template:
    metadata:
      labels:
        app: runner-service
        app.kubernetes.io/component: backend
    spec:
      # Pod level security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 999  # Assuming appuser in Dockerfile.secure has UID 999
        runAsGroup: 999 # Assuming appgroup in Dockerfile.secure has GID 999
        fsGroup: 999    # Volume access group
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: runner-service
        image: your-registry/alt-las-runner-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: RUST_LOG
          value: "info"
        # Container level security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-data
          mountPath: /tmp
        - name: runner-data
          mountPath: /data
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
      volumes:
      - name: tmp-data
        emptyDir: {}
      - name: runner-data
        persistentVolumeClaim:
          claimName: runner-service-pvc
