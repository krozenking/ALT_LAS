# Beta Dockerfile for Segmentation Service
# Created by Can Tekin (DevOps Engineer)

# Build stage
FROM python:3.9-slim AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file
COPY segmentation-service/requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir uvicorn fastapi

# Runtime stage
FROM python:3.9-slim

# Set working directory
WORKDIR /app

# Create non-root user
RUN groupadd -r appuser && \
    useradd -r -g appuser -d /app -s /sbin/nologin -c "Docker image user" appuser

# Copy Python dependencies from builder stage
COPY --from=builder /usr/local/lib/python3.9/site-packages /usr/local/lib/python3.9/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Install curl for healthcheck
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl && \
    rm -rf /var/lib/apt/lists/*

# Copy application code
COPY segmentation-service/main.py /app/
COPY segmentation-service/memory_optimizer.py /app/
COPY segmentation-service/enhanced_language_processor.py /app/
COPY segmentation-service/logger_utils.py /app/

# Create necessary directories
RUN mkdir -p /app/logs && \
    mkdir -p /app/tmp && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8000

# Add health check (standard production interval)
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Environment variables for production
ENV PYTHONPATH=/app
ENV ENVIRONMENT=production
ENV MEMORY_THRESHOLD_MB=500
ENV HIGH_MEMORY_THRESHOLD_MB=1000
ENV GC_INTERVAL=60
ENV MAX_CACHE_SIZE=100

# Command to run the application
CMD ["python", "main.py"]
