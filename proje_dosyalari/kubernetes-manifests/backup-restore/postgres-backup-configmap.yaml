apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-backup-scripts
  namespace: alt-las
data:
  backup.sh: |
    #!/bin/bash
    set -e
    
    # Yedekleme zaman damgası
    BACKUP_TIMESTAMP=$(date +%Y%m%d%H%M%S)
    BACKUP_DIR="/backup"
    POSTGRES_HOST="postgres-db"
    POSTGRES_PORT="5432"
    POSTGRES_USER="postgres"
    POSTGRES_DB="altlas_db"
    
    # Yedekleme dosya adı
    BACKUP_FILE="${BACKUP_DIR}/postgres_${POSTGRES_DB}_${BACKUP_TIMESTAMP}.sql.gz"
    
    echo "PostgreSQL yedeklemesi başlatılıyor: ${BACKUP_FILE}"
    
    # pg_dump ile veritabanı yedeği alınıyor
    PGPASSWORD=${POSTGRES_PASSWORD} pg_dump -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER} ${POSTGRES_DB} | gzip > ${BACKUP_FILE}
    
    # Yedekleme başarılı mı kontrol ediliyor
    if [ $? -eq 0 ]; then
      echo "PostgreSQL yedeklemesi başarıyla tamamlandı: ${BACKUP_FILE}"
      
      # Eski yedeklemeleri temizle (7 günden eski)
      find ${BACKUP_DIR} -name "postgres_*.sql.gz" -type f -mtime +7 -delete
      echo "7 günden eski yedeklemeler temizlendi"
    else
      echo "PostgreSQL yedeklemesi başarısız oldu!"
      exit 1
    fi
    
  restore.sh: |
    #!/bin/bash
    set -e
    
    # Geri yükleme parametreleri
    BACKUP_DIR="/backup"
    POSTGRES_HOST="postgres-db"
    POSTGRES_PORT="5432"
    POSTGRES_USER="postgres"
    POSTGRES_DB="altlas_db"
    
    # Geri yüklenecek dosya (en son yedekleme veya belirtilen dosya)
    if [ -z "$1" ]; then
      BACKUP_FILE=$(ls -t ${BACKUP_DIR}/postgres_*.sql.gz | head -1)
    else
      BACKUP_FILE="${BACKUP_DIR}/$1"
    fi
    
    if [ ! -f "${BACKUP_FILE}" ]; then
      echo "Hata: Yedekleme dosyası bulunamadı: ${BACKUP_FILE}"
      exit 1
    fi
    
    echo "PostgreSQL geri yüklemesi başlatılıyor: ${BACKUP_FILE}"
    
    # Veritabanını yeniden oluştur
    PGPASSWORD=${POSTGRES_PASSWORD} psql -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -c "DROP DATABASE IF EXISTS ${POSTGRES_DB};"
    PGPASSWORD=${POSTGRES_PASSWORD} psql -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -c "CREATE DATABASE ${POSTGRES_DB};"
    
    # Yedeği geri yükle
    gunzip -c ${BACKUP_FILE} | PGPASSWORD=${POSTGRES_PASSWORD} psql -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USER} -d ${POSTGRES_DB}
    
    # Geri yükleme başarılı mı kontrol ediliyor
    if [ $? -eq 0 ]; then
      echo "PostgreSQL geri yüklemesi başarıyla tamamlandı: ${BACKUP_FILE}"
    else
      echo "PostgreSQL geri yüklemesi başarısız oldu!"
      exit 1
    fi
    
  list-backups.sh: |
    #!/bin/bash
    
    BACKUP_DIR="/backup"
    
    echo "Mevcut PostgreSQL yedeklemeleri:"
    ls -lh ${BACKUP_DIR}/postgres_*.sql.gz 2>/dev/null || echo "Hiç yedekleme bulunamadı."
