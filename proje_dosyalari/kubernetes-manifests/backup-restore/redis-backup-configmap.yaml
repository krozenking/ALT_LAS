apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-backup-scripts
  namespace: alt-las
data:
  backup.sh: |
    #!/bin/bash
    set -e
    
    # Yedekleme zaman damgası
    BACKUP_TIMESTAMP=$(date +%Y%m%d%H%M%S)
    BACKUP_DIR="/backup"
    REDIS_HOST="redis"
    REDIS_PORT="6379"
    
    # Yedekleme dosya adı
    BACKUP_FILE="${BACKUP_DIR}/redis_${BACKUP_TIMESTAMP}.rdb"
    
    echo "Redis yedeklemesi başlatılıyor: ${BACKUP_FILE}"
    
    # Redis'e SAVE komutu gönderiliyor
    redis-cli -h ${REDIS_HOST} -p ${REDIS_PORT} -a ${REDIS_PASSWORD} SAVE
    
    # Redis RDB dosyasını kopyala
    redis-cli -h ${REDIS_HOST} -p ${REDIS_PORT} -a ${REDIS_PASSWORD} --rdb ${BACKUP_FILE}
    
    # Yedekleme başarılı mı kontrol ediliyor
    if [ $? -eq 0 ]; then
      echo "Redis yedeklemesi başarıyla tamamlandı: ${BACKUP_FILE}"
      
      # Eski yedeklemeleri temizle (7 günden eski)
      find ${BACKUP_DIR} -name "redis_*.rdb" -type f -mtime +7 -delete
      echo "7 günden eski yedeklemeler temizlendi"
    else
      echo "Redis yedeklemesi başarısız oldu!"
      exit 1
    fi
    
  restore.sh: |
    #!/bin/bash
    set -e
    
    # Geri yükleme parametreleri
    BACKUP_DIR="/backup"
    REDIS_HOST="redis"
    REDIS_PORT="6379"
    
    # Geri yüklenecek dosya (en son yedekleme veya belirtilen dosya)
    if [ -z "$1" ]; then
      BACKUP_FILE=$(ls -t ${BACKUP_DIR}/redis_*.rdb | head -1)
    else
      BACKUP_FILE="${BACKUP_DIR}/$1"
    fi
    
    if [ ! -f "${BACKUP_FILE}" ]; then
      echo "Hata: Yedekleme dosyası bulunamadı: ${BACKUP_FILE}"
      exit 1
    fi
    
    echo "Redis geri yüklemesi başlatılıyor: ${BACKUP_FILE}"
    
    # Redis'i durdur
    redis-cli -h ${REDIS_HOST} -p ${REDIS_PORT} -a ${REDIS_PASSWORD} SHUTDOWN SAVE
    
    # Redis'in durmasını bekle
    sleep 5
    
    # Redis RDB dosyasını kopyala
    # Not: Bu adım, Redis pod'unun içindeki RDB dosyasını değiştirmek için
    # özel bir yaklaşım gerektirir. Bu örnek basitleştirilmiştir.
    echo "Redis RDB dosyası geri yükleniyor..."
    
    # Redis'i yeniden başlat
    # Not: Kubernetes ortamında, pod'u yeniden başlatmak için
    # kubectl delete pod komutu kullanılabilir.
    echo "Redis yeniden başlatılıyor..."
    
    echo "Redis geri yüklemesi tamamlandı."
    
  list-backups.sh: |
    #!/bin/bash
    
    BACKUP_DIR="/backup"
    
    echo "Mevcut Redis yedeklemeleri:"
    ls -lh ${BACKUP_DIR}/redis_*.rdb 2>/dev/null || echo "Hiç yedekleme bulunamadı."
