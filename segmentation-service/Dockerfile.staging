# Stage 1: Build stage
FROM python:3.10.13-slim-bookworm as builder

WORKDIR /app

# Install build dependencies if any are needed
# RUN apt-get update && apt-get install -y --no-install-recommends build-essential && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements_updated.txt requirements.txt
RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# Stage 2: Final stage
FROM python:3.10.13-slim-bookworm

# Create a non-root user and group
RUN groupadd --system app && useradd --system --gid app --shell /sbin/nologin app

WORKDIR /app

# Copy Python dependencies from builder stage
COPY --from=builder /wheels /wheels
COPY requirements_updated.txt requirements.txt
RUN pip install --no-cache-dir --no-index --find-links=/wheels -r requirements.txt \
    && rm -rf /wheels requirements.txt

# Copy application code
COPY ./main.py .
COPY ./command_parser.py .
COPY ./dsl_schema.py .
COPY ./error_handling.py .
COPY ./language_processor.py .
COPY ./mode_handler.py .
COPY ./persona_handler.py .
COPY ./task_prioritization.py .
COPY ./config ./config
COPY ./language_resources ./language_resources
# Add other necessary files

# Create directories and set permissions
RUN mkdir -p /app/logs \
    && chown -R app:app /app

# Install minimal tools needed for staging environment
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    procps \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Use non-root user for staging environment
USER app

# Set environment variables
ENV PORT=8000
ENV PYTHONUNBUFFERED=1
ENV ENVIRONMENT=staging
ENV LOG_LEVEL=INFO

# Expose port
EXPOSE 8000

# Healthcheck for staging environment
HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=3 \
  CMD curl --fail http://localhost:8000/health || exit 1

# Run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
